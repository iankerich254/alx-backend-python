pipeline {
    agent any

    environment {
        VENV = 'venv'
        PROJECT_DIR = 'messaging_app'
        DOCKER_IMAGE = 'iankerich254/messaging_app:latest'
    }

    stages {
        stage('Clone Repo') {
            steps {
                sh 'git --version'
                git branch: 'main', credentialsId: '5821905a-801f-4c61-bcdc-6d4ef34dbf0e', url: 'https://github.com/iankerich254/alx-backend-python.git'
                sh 'git branch'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir("${PROJECT_DIR}") {
                    sh '''
                        python3 -m venv ${VENV}
                        . ${VENV}/bin/activate
                        pip install --upgrade pip
                        pip install -r requirements.txt
                    '''
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir("${PROJECT_DIR}") {
                    sh '''
                        . ${VENV}/bin/activate
                        pytest --junitxml=test-results.xml
                    '''
                }
            }
            post {
                always {
                    junit "${PROJECT_DIR}/test-results.xml"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir("${PROJECT_DIR}") {
                    sh "docker build -t ${DOCKER_IMAGE} ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'iankerich254', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push ${DOCKER_IMAGE}
                        docker logout
                    '''
                }
            }
        }
    }
}
