pipeline {
    agent any

    environment {
        VENV = 'venv'
        DOCKER_IMAGE = 'iankerich254/messaging_app:latest'
    }

    stages {
        stage('Clone Repo') {
            steps {
                bat 'git --version'
                git branch: 'main', credentialsId: '5821905a-801f-4c61-bcdc-6d4ef34dbf0e', url: 'https://github.com/iankerich254/alx-backend-python.git'
                bat 'git branch'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('messaging_app') {
                    bat '''
                        python -m venv %VENV%
                        call %VENV%\\Scripts\\activate
                        pip install --upgrade pip
                        pip install -r requirements.txt
                    '''
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('messaging_app') {
                    bat '''
                        call %VENV%\\Scripts\\activate
                        pytest --junitxml=test-results.xml
                    '''
                }
            }
            post {
                always {
                    junit 'messaging_app/test-results.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('messaging_app') {
                    bat "docker build -t %DOCKER_IMAGE% ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'iankerich254', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    bat '''
                        echo %DOCKER_PASS% | docker login -u %DOCKER_USER% --password-stdin
                        docker push %DOCKER_IMAGE%
                        docker logout
                    '''
                }
            }
        }
    }
}
